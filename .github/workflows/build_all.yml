name: Development Build
on:
  push:
    branches:
      - master

jobs:
  BuildLinux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install ps2pdf
        run: |
          sudo apt update
          sudo apt install ghostscript

      - name: Build
        run: |
          make 

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: assets
          path: |
              vmsbackup
              vmsbackup.pdf
              vmsbackup.txt
          retention-days: 2

  BuildMing64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: git mingw-w64-ucrt-x86_64-gcc msys2-runtime-devel mingw-w64-ucrt-x86_64-ghostscript groff make 

      - name: CI-Build
        run: |
          make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: assets
          path: vmsbackup.exe
          retention-days: 2

  UpdateAssets:
    if: ${{ github.repository_owner == 'crwolff' && github.event_name == 'push' }}
    needs: [BuildLinux, BuildMing64]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch artifacts
        uses: actions/download-artifact@v4

      - name: Upload latest pre-release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            assets/vmsbackup*
            README

